{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "deep-green",
    "glyph" : "list-alt"
  },
  "name" : "爱范儿",
  "script" : "const ifanrLogoBase64 = 'iVBORw0KGgoAAAANSUhEUgAAAEsAAABLCAYAAAA4TnrqAAAABGdBTUEAALGPC\/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QA\/wD\/AP+gvaeTAAAACXBIWXMAAC4jAAAuIwF4pT92AAAAB3RJTUUH5AwOCDkP9AaolQAABkJJREFUeNrtnFtoXNUexn\/ff+1k0lxMYoWIwvFWH7xVodSqVc9pPYhKBUWpircKVuut4qVBfPZBYtR6DqeeB6sIWkVEo4ho+iBoKwoaS59ab2BaQWtbnRozSWac7cOeqfFBzTT\/mb0b5oMFMzDJXvs331rr\/629Zyu\/NOwHWoCYpv5MBmyPgE4SWE39tTqiaW\/2ANtoOqyqGMgBi0kMxXRYHwHXAaW0e5kFxTGxRB8wDJwCf4RVBqaAUvfWX9Pua+rKLw2Q8Dg40iztTh1OasKqQU1YNagJqwY1YdWgaCYf2tsHQA+wCAiOx98BjBLDUXvSRvH3mhGsigzxELAMn1osAEOIW4gZSxvEzADMRAIC+xHrMcYwcg4twrgccTWCfcemjcIJ1lHfgQQSwxKbKq89Wk7GAwo6ASltFj6wAOZ\/CwQVMa3HtBMTLk06HeMeAmHfP7INrLbVMBmOn2Osxyhilf8w2yZuRixDsP\/47AKrCdb80bgKbZOMYRk4tSMl+hXozXIxU3PXLIACBzAGMH5wc5exHHETMexfkE131Qyr96s4GY4xWzA2OsIKGGtp4TQE+07OHrBDMv2RX8YQUUZswDQiE07tREn3KyhnYY7AApKTC9olMYhRcHTYSsRlCH48NVsT2CH3pndHORmOxhBiyBFWJ0Y\/xtFkzFyz++qimIqrBjF2OQJbgnFby7yYnxZmx12z6knv9hgZhCNsRGKDjLJTKSEZt5eKWoLgp4XZsNisv7ae7WXK42UwNiK2eOUgpGMwrcPUQciGu3x6YQamHzANYBxwrOxXYEnQzi\/y3BlKEVbPSCmZ7MWwjE2OlX1O4gEFTshCZe\/WBUVCgWIlN+50nOzPQNxNIOSXpOsuN1jdH5eqQXsnxlOuQdtYBfwLQf7c9IC5mrv748rFWbEJ76Bt9CuoV5beyug+E5iBgvKSBiqTvs++l2k54kZiOHBBLbvhGYbVtfVXKpX3FsSzjkMxwlhLlATtOQEL4IgPSknQNjYgPnMEdhLGfQq0\/rys8e6q24IsAwVGZQzKKDjOX9dUg\/bPyxsLrG6wut47WHu9jhiqvPZovwftBtde9T2cAUEFTIOYdjle5DgH0+qWDmPs4sbdtFhXWF2bE3d19jEi42nXoC3WlCbjszEYu6QxwOpu5K7hIr\/sBcRGjK2Ok\/0xiHUYHY0ajo05jAGBPSQXOfyCtrECcRWCsRX1d1dDYHW+XaxOzu\/KeMlxZWxLrmhzfCMuaDdsPel8q4iMYnK\/hD53rOwXIt1NpPDLFa1zA1ZyNEGkHaguQfufCMaurN9wbCisjqGp6lFfRGx2hDUfo19Gr9UxaDd+S81iZORlDEjsdZy\/LsK4AWB8ZX2GY8NhdbxarB71A4xnHSv7atA+FcHYSv8o1HhnAe2vTFWD9v8wtjnu2S9IgrZaQ\/DfJEwFFgASMo3KNChTwe0WAOkaxKUICtfn5gas9pcmfw\/axpuOk30Xop9An\/fZpecsSG7\/DYxjPIax2xHYuYjVdEPhZj93pQpr3vOJu9oWxZ+6B21jjcZYLMHEKh9g6TqrAmxym0A8g\/Gho7uOxVhHUDtOty+lDutgL4L2kFzkOOAYhS5HXAUwsbptbsBq23hwsn8H8bKju9pwDNqZgAWgluSKtownJb5wrOzPxLiLiDC5Znbuygys3IZCdd9rB8ZTiJJjdX8LcCEGE3ceOrDMwALIPT1B5W7CF7C6BO0em8UZZwpWtUcyJUHbtNexsv83phsAptbOmxuwcv+tuAu9j\/Gco7sixL1EOgWDmNMOf1gArf8pQKCMnIO2sQBxH0Zr8f6v5wasas8U+EbG4zImHFfHayUukaD4YG3DMbOwWp8oVFey1zDecA3admhBO7OwAOLk5MZJfpjgGbTPQ7p16rgeig+1zw1YrQMFMLF7JP4E6f+YYqcYJIw7crvziyUozRBYOneF1aCWR8cpPdwO8AxwEWIx4PH8lx7gdsR2YiZn8geZhwUk\/o\/5HrEK6MPnSUyi+qyZGebGwwJW9Mh49eVopaWiTM9ZWVMTVg1qwqpBTVg1qAmrBk1fDVtIao9SfmkGf6DceJWBbqY9qGg6rPOBzTSfJjldEXDc9DdVdQNnpd27LCsCvqT5UNe\/k4DR3wAs6ESY+qe0ogAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMC0xMi0xNFQwODo1NzoxNS0wNTowMPhFhMEAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjAtMTItMTRUMDg6NTc6MTUtMDU6MDCJGDx9AAAAAElFTkSuQmCC';\nconst listIconBase64 = 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAgMAAABinRfyAAAACVBMVEUAAADxOwP\/\/\/+ZVyMXAAAAAXRSTlMAQObYZgAAAAFiS0dEAmYLfGQAAAAgSURBVAjXY2AAAdHQ0BAIIcIAREQQDHBChBWkDUSAAADfMwUTMaVRwQAAAABJRU5ErkJggg==';\nconst listIcon = Image.fromData(Data.fromBase64String(listIconBase64));\nconst ifanrLogo = Image.fromData(Data.fromBase64String(ifanrLogoBase64));\n\nfunction lastOfArray(array) {\n  return array[array.length - 1];\n}\n\nfunction parseXml(string) {\n  const xmlParser = new XMLParser(string);\n\n  return new Promise((resolve, reject) => {\n\n    const items = [];\n    let currentValue = '';\n    let currentItem = null;\n\n    xmlParser.parseErrorOccurred = err => {\n      reject(err);\n      return;\n    };\n\n    xmlParser.foundCharacters = str => {\n      currentValue += str\n    }\n\n    xmlParser.didStartElement = (name) => {\n      currentValue = \"\"\n      if (name == \"item\") {\n        currentItem = {}\n      }\n    }\n\n    xmlParser.didEndElement = (name) => {\n      const hasItem = currentItem != null;\n      if (hasItem && [\"title\", \"link\", \"image\"].indexOf(name) >= 0) {\n        currentItem[name] = currentValue\n      }\n\n      if (name === \"item\") {\n        items.push(currentItem)\n        currentItem = {}\n      }\n      \/\/ console.log(arg0);\n    }\n\n    xmlParser.didEndDocument = () => {\n      \/\/ console.log(stack);\n      resolve(items);\n    }\n\n    xmlParser.parse();\n  });\n}\n\nconst host = 'https:\/\/sso.ifanr.com';\nlet itemsPerPage = 5;\nlet itemImageHight = 40;\nlet itemImageWidth = 72;\n\/** end global *\/\n\nconst dateFormatter = new DateFormatter();\ndateFormatter.dateFormat = 'yyyy-MM-dd HH:mm:ss';\n\nfunction queryStringify(query) {\n  return `?${Object.keys(query).map(key => `${key}=${encodeURIComponent(query[key])}`).join('&')}`;\n}\n\nasync function loadFeed() {\n  \/\/ const request = new Request('https:\/\/www.ifanr.com\/feed');\n  \/\/ const response = await request.loadString();\n\n  \/\/ const result = await parseXml(response);\n  \/\/ console.log(result);\n  \/\/ return result;\n  \/\/ const parseState = xmlParser.parse();\n  const queryIfanrParams = {\n    limit: 5,\n    offset: 0,\n    published_at__lte: dateFormatter.string(new Date())\n  }\n  const request = new Request(`${host}\/api\/v5\/wp\/web-feed\/?${queryStringify(queryIfanrParams)}`);\n  const response = await request.loadJSON();\n  \n  const { meta, objects } = response;\n\n  return objects;\n}\n\nfunction renderItemWithImage(stack, item) {\n  stack.url = item.post_url;\n  stack.spacing = 10;\n  const previewImage = stack.addImage(item.image);\n  previewImage.imageSize = new Size(50, 32);\n  const text = stack.addText(item.post_title);\n  text.font = Font.systemFont(14);\n  stack.centerAlignContent();\n}\n\nfunction renderItemPlainText(stack, item) {\n  stack.url = item.post_url;\n  stack.spacing = 10;\n  const listIconImage = stack.addImage(listIcon);\n  listIconImage.imageSize = new Size(10, 10);\n  const text = stack.addText(item.post_title);\n  text.font = Font.systemFont(14);\n  stack.centerAlignContent();\n}\n\nasync function createWidget(items, widgetFamily) {\n  const listWidget = new ListWidget();\n  const nextDate = new Date();\n  nextDate.setMinutes(nextDate.getMinutes() + 5);\n  listWidget.refreshAfterDate = nextDate;\n  const titleStack = listWidget.addStack();\n  titleStack.spacing = 10;\n  titleStack.setPadding(3, 0, 3, 0);\n  const image = titleStack.addImage(ifanrLogo);\n  image.imageSize = new Size(20, 20);\n  const titleText = titleStack.addText('爱范儿');\n  titleText.font = Font.boldSystemFont(16);\n  let render;\n  let present;\n  \/\/ listWidget.addSpacer(4);\n  switch (widgetFamily) {\n    case 'large':\n      await Promise.all(items.map(async item => {\n        const req = new Request(item.post_cover_image);\n        item.image = await req.loadImage();\n        return Promise.resolve();\n      }));\n      render = renderItemWithImage;\n      present = listWidget.presentLarge.bind(listWidget);\n      items = items.slice(0, 5);\n      listWidget.spacing = 14;\n      break;\n    case 'medium':\n      render = renderItemPlainText;\n      present = listWidget.presentMedium.bind(listWidget);\n      items = items.slice(0, 4);\n      listWidget.spacing = 6;\n      break;\n    default:\n      return;\n  }\n\n  \/\/ const stacks = items.map(render);\n\n  for (const item of items) {\n    const stack = listWidget.addStack();\n    render(stack, item);\n  }\n\n  const lastUpdateWidgetText = listWidget.addText(`上次更新：${dateFormatter.string(new Date())}`);\n  lastUpdateWidgetText.font = Font.thinSystemFont(9);\n  lastUpdateWidgetText.rightAlignText();\n  Script.setWidget(listWidget);\n  present();\n\n}\n\nasync function initScript() {\n  const feed = await loadFeed();\n  await createWidget(feed, config.widgetFamily || 'large');\n}\n\nawait initScript();\n\n",
  "share_sheet_inputs" : [

  ]
}